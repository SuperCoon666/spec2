{"remainingRequest":"/workspaces/spec2/node_modules/thread-loader/dist/cjs.js!/workspaces/spec2/node_modules/babel-loader/lib/index.js!/workspaces/spec2/src/utils/validate.js","dependencies":[{"path":"/workspaces/spec2/src/utils/validate.js","mtime":1683295624136},{"path":"/workspaces/spec2/babel.config.js","mtime":1683295624132},{"path":"/workspaces/spec2/node_modules/cache-loader/dist/cjs.js","mtime":1683295806320},{"path":"/workspaces/spec2/node_modules/thread-loader/dist/cjs.js","mtime":1683295806216},{"path":"/workspaces/spec2/node_modules/babel-loader/lib/index.js","mtime":1683295807464}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRW1haWwoZW1haWwpIHsKICBjb25zdCByZSA9IC9eKChbXjw+KClcW1xdXFwuLDs6XHNAIl0rKFwuW148PigpXFtcXVxcLiw7OlxzQCJdKykqKXwoIi4rIikpQCgoXFtbMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XF0pfCgoW2EtekEtWlwtMC05XStcLikrW2EtekEtWl17Mix9KSkkLzsKICByZXR1cm4gcmUudGVzdChlbWFpbCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUGhvbmUocGhvbmUpIHsKICB0cnkgewogICAgZm9yIChjb25zdCBjaGFyIG9mIHBob25lKSB7CiAgICAgIGlmICghKC9eXGQkLy50ZXN0KGNoYXIpIHx8ICcoKS0rICcuaW5jbHVkZXMoY2hhcikpKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CiAgICBjb25zdCBwaG9uZVV0aWwgPSByZXF1aXJlKCdnb29nbGUtbGlicGhvbmVudW1iZXInKS5QaG9uZU51bWJlclV0aWwuZ2V0SW5zdGFuY2UoKTsKICAgIGNvbnN0IG51bWJlciA9IHBob25lVXRpbC5wYXJzZUFuZEtlZXBSYXdJbnB1dChwaG9uZSwgJ1JVJyk7CiAgICBjb25zb2xlLmxvZygnbnVtYmVyOicsIG51bWJlcik7CiAgICBjb25zb2xlLmxvZygnaXNWYWxpZE51bWJlcjonLCBwaG9uZVV0aWwuaXNWYWxpZE51bWJlcihudW1iZXIpKTsKICAgIHJldHVybiBwaG9uZVV0aWwuaXNWYWxpZE51bWJlcihudW1iZXIpOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQp9"},{"version":3,"names":["validateEmail","email","re","test","validatePhone","phone","char","includes","phoneUtil","require","PhoneNumberUtil","getInstance","number","parseAndKeepRawInput","console","log","isValidNumber","error"],"sources":["/workspaces/spec2/src/utils/validate.js"],"sourcesContent":["export function validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return re.test(email)\n}\n\nexport function validatePhone(phone) {\n    try {\n        for (const char of phone) {\n            if (!(/^\\d$/.test(char) || '()-+ '.includes(char))) {\n                return false\n            }\n        }\n        const phoneUtil = require('google-libphonenumber').PhoneNumberUtil.getInstance()\n        const number = phoneUtil.parseAndKeepRawInput(phone, 'RU')\n        console.log('number:', number)\n        console.log('isValidNumber:', phoneUtil.isValidNumber(number))\n        return phoneUtil.isValidNumber(number)\n    } catch (error) {\n        return false\n    }\n}\n"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,KAAK,EAAE;EACjC,MAAMC,EAAE,GAAG,yJAAyJ;EACpK,OAAOA,EAAE,CAACC,IAAI,CAACF,KAAK,CAAC;AACzB;AAEA,OAAO,SAASG,aAAaA,CAACC,KAAK,EAAE;EACjC,IAAI;IACA,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;MACtB,IAAI,EAAE,MAAM,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,OAAO,CAACC,QAAQ,CAACD,IAAI,CAAC,CAAC,EAAE;QAChD,OAAO,KAAK;MAChB;IACJ;IACA,MAAME,SAAS,GAAGC,OAAO,CAAC,uBAAuB,CAAC,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC;IAChF,MAAMC,MAAM,GAAGJ,SAAS,CAACK,oBAAoB,CAACR,KAAK,EAAE,IAAI,CAAC;IAC1DS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;IAC9BE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,SAAS,CAACQ,aAAa,CAACJ,MAAM,CAAC,CAAC;IAC9D,OAAOJ,SAAS,CAACQ,aAAa,CAACJ,MAAM,CAAC;EAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZ,OAAO,KAAK;EAChB;AACJ"}]}